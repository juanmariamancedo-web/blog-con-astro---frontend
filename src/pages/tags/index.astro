---
import MainLayout from "../../layouts/MainLayout.astro"
import PaginationTags from "./components/PaginationTags"
import Search from "./components/Search"
import createSearchtag from "./utils/createSearchTag"
import type { Welcome}  from "../../models/categoriesAndTags"
import type { CategoryAndTagMapping } from "../../models/categoryAndTagMapping"

const API_URL = import.meta.env.PUBLIC_API_URL
    
async function obtainTags(page:number): Promise<Welcome>{
    const postsParcials = await fetch(`${API_URL}/api/tags?pagination[page]=${page}&pagination[pageSize]=2&populate=posts`) 
    return postsParcials.json()
}

let page = 1

const categories = await obtainTags(page)

const totalPages = categories.meta.pagination.total

var categoriesArray = categories.data

while(page < totalPages){ 
    ++page
    
    const categoriesParcials = await obtainTags(page)
    
    categoriesArray = [...categoriesArray, ...categoriesParcials.data]
}

const categoriesToUpdateRaw = await Promise.all(categoriesArray.map(async(category)=>{
    return await createSearchtag(category);
}))

const categoriesToUpdate = categoriesToUpdateRaw.filter((elemento): elemento is CategoryAndTagMapping => elemento !== undefined)

---

<MainLayout title="" description="">
    <section class="flex flex-col justify-center items-center">
        <div class="container p-3 flex justify-start">
            <Search client:load tags={categoriesToUpdate} />
        </div> 
        <PaginationTags tags={categoriesToUpdate} client:load/>
    </section>
</MainLayout>